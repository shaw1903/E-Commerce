// <auto-generated />
using System;
using E_Commerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.Migrations
{
    [DbContext(typeof(JumaContext))]
    [Migration("20220222180458_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("E_Commerce.Models.Customers", b =>
                {
                    b.Property<string>("CustomerName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar (30)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("STRING");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("STRING");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("STRING");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("INT");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("STRING");

                    b.HasKey("CustomerName");

                    b.HasIndex(new[] { "Address" }, "Address");

                    b.HasIndex(new[] { "CustomerName" }, "CustomerName");

                    b.HasIndex(new[] { "EmailAddress" }, "EmailAddress");

                    b.HasIndex(new[] { "PhoneNumber" }, "PhoneNumber");

                    b.HasIndex(new[] { "PostCode" }, "PostCode");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("E_Commerce.Models.Images", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTaken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Event")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .HasColumnType("TEXT");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("REAL");

                    b.HasKey("ItemID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("E_Commerce.Models.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderDate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OrderSuccessful")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ImagesOrders", b =>
                {
                    b.Property<int>("ImageItemID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrdersOrderID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImageItemID", "OrdersOrderID");

                    b.HasIndex("OrdersOrderID");

                    b.ToTable("ImagesOrders");
                });

            modelBuilder.Entity("ImagesOrders", b =>
                {
                    b.HasOne("E_Commerce.Models.Images", null)
                        .WithMany()
                        .HasForeignKey("ImageItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.Models.Orders", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
